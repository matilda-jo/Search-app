{"version":3,"sources":["Search.jsx","App.js","reportWebVitals.js","index.js"],"names":["useStyles","makeStyles","theme","input","width","height","marginTop","borderRadius","textAlign","fontFamily","fontSize","letterSpacing","fontStyle","breakpoints","down","Search","useState","searchTerm","setSearchTerm","classes","type","className","placeholder","onChange","event","target","value","JSONDATA","filter","val","first_name","toLowerCase","includes","last_name","map","key","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sPAIMA,EAAYC,aAAW,SAACC,GAAD,MAAY,CACrCC,MAAM,aACFC,MAAO,OACPC,OAAQ,MACRC,UAAW,MACXC,aAAc,MACdC,UAAW,SACXC,WAAY,OACZC,SAAU,MACVC,cAAe,QACfC,UAAW,UACVV,EAAMW,YAAYC,KAAK,KAAO,CAC3BJ,SAAU,aAKP,SAASK,IAAU,IAAD,EACOC,mBAAS,IADhB,mBACtBC,EADsB,KACVC,EADU,KAEvBC,EAAUnB,IAEhB,OACI,gCACI,uBACAoB,KAAK,OACLC,UAAWF,EAAQhB,MACnBmB,YAAY,YACZC,SAAU,SAAAC,GACNN,EAAcM,EAAMC,OAAOC,UAE9BC,EAASC,QAAO,SAACC,GACd,MAAkB,KAAfZ,GAEOY,EAAIC,WAAWC,cAAcC,SAASf,EAAWc,gBAAkBF,EAAII,UAAUF,cAAcC,SAASf,EAAWc,eADlHF,OACJ,KAGRK,KAAI,SAACL,EAAKM,GACb,OAAQ,8BACI,8BACKN,EAAIC,WADT,IACsBD,EAAII,qBChCnCG,MARf,WACE,OACE,qBAAKf,UAAU,MAAf,SACE,cAACN,EAAD,OCMSsB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.59d97ba3.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport JSONDATA from './MOCK_DATA.json';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    input: {\r\n        width: '15vw',\r\n        height: '2vw',\r\n        marginTop: '5vw',\r\n        borderRadius: '7px',\r\n        textAlign: 'center',\r\n        fontFamily: 'Lato',\r\n        fontSize: '1vw',\r\n        letterSpacing: '0.5px',\r\n        fontStyle: 'italic',\r\n        [theme.breakpoints.down(900)]: {\r\n            fontSize: '12px'\r\n          }\r\n    },\r\n}));\r\n\r\nexport default function Search() {\r\n    const [searchTerm, setSearchTerm] = useState('');\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <div>\r\n            <input \r\n            type='text'\r\n            className={classes.input}\r\n            placeholder='Search...' \r\n            onChange={event => {\r\n                setSearchTerm(event.target.value)\r\n                }}/>\r\n            {JSONDATA.filter((val) => {\r\n                if(searchTerm === '') {\r\n                    return val\r\n                } else if(val.first_name.toLowerCase().includes(searchTerm.toLowerCase()) || val.last_name.toLowerCase().includes(searchTerm.toLowerCase()) ) {\r\n                    return val\r\n                }\r\n            }).map((val, key)=> {\r\n            return  <div>\r\n                        <p>\r\n                            {val.first_name} {val.last_name}\r\n                        </p>\r\n                    </div>\r\n                    }\r\n                )\r\n            }\r\n        </div>\r\n    )\r\n}\r\n","import './App.css';\nimport Search from './Search';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Search />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}